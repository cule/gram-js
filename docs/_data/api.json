{
	"id": 0,
	"name": "gram.js API",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "gram-ast",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-ast/src/gram-tokens.ts",
			"comment": {
				"text": "`()-[define]->(ast)`\n\nGram abstract syntax tree definitions, tokenizing regexes, and utilities like type guards.\n\n## How to gram-ast\n\n### Install:\n\n```bash\nnpm install @gram-data/gram-ast\n```\n\n### Use [[gram-parse]] to create an AST, then introspect with gram-ast:\n\n```TypeScript\nimport { isGramSeq, isGramNode, isGramEdge } from '@gram-data/gram-ast';\nimport { toAST } from '@gram-data/gram-parse';  \n\nconst src = '(a)-->(b)';\nconst parsed = toAST(src);\n\n// the top-level of the AST is a sequence of paths\nconsole.assert(isGramSeq(parsed));\n\n// the first path should be an edge\nconst firstPath = parsed.children[0];\nconsole.assert(isGramEdge(firstPath));\n\n// the children of an edge are nodes\nconsole.assert(isGramNode(firstPath.children[0]));\nconsole.assert(isGramNode(firstPath.children[1]));\n```\n\n## Syntax Tree\n\nThe `gram` AST is based on the [unist](https://github.com/syntax-tree/unist) specification\nfor syntax trees. Many of the tools and techniques of the [unified](https://unifiedjs.com)\necosystem can be applied to working with `gram`.\n\nGram represents data using two basic elements: paths and sequences.\n\nPaths provide structure. Sequences provide order.\n\n### {@linkcode gram-ast.GramSeq | GramSeq}\n\nA `gram` sequence is the root element of an AST.\nIt is exactly what it sounds like: a sequence of elements where\neach element is a path.\n\nThe AST type is useful in returning a well-rooted tree that can be processed\nby general-purpose AST tools like [unist-util-visit](https://github.com/syntax-tree/unist-util-visit).\n\nIn practice this is equivalent to a `GramPath[]`. Most `gram` functions will accept either.\n\n### {@linkcode gram-ast.GramPath | GramPath}\n\nA `gram` path is either an empty path, or the composition of two other paths.\nThe data structure of a path is like a list which remembers how it was assembled.\nThe list elements are other paths.\n\nEach path has its own identity, labels and a data record.\n\n### [record](../interfaces/gram_ast.gramrecord-1.html)\n\nIn the AST, records are a multimap presented as an _array_ of name/value\nproperties. That means a property name _may_ appear more than once, with\ndifferent or the same values.\n\nWhen mapping to a data model, choose one of these strageies for handling the\nmultimapped properties:\n\n- single-state: pick the first or last value (_recommended_)\n- join: accumulate the values into an array\n- reduce: aggregate the values into a single value\n\n## Next Steps\n\n- Learn more about parsing with [[gram-ast]]\n- Transform to js objects using [[gram-value]]\n- Serialize back to text using [[gram-stringify]]\n"
			},
			"children": [
				{
					"id": 85,
					"name": "BooleanLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a boolean literal, like `true` or `false`."
					},
					"indexSignature": [
						{
							"id": 90,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a boolean literal, like `true` or `false`."
							},
							"parameters": [
								{
									"id": 91,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 88,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 89,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 86,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents this variant of a Literal."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 308,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 87,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 310,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								88,
								89,
								86,
								87
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 304,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 143,
					"name": "DateLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an ISO8601 calendar date, like `2020-02-02`.",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates | Wikipedia ISO8601 Caelndar dates}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 149,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an ISO8601 calendar date, like `2020-02-02`.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates | Wikipedia ISO8601 Caelndar dates}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 150,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 147,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 148,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 144,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 473,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "date"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 145,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 146,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								147,
								148,
								144,
								145,
								146
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 472,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 159,
					"name": "DateTimeLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an ISO8601 date-time, like `2007-04-05T14:30Z` which is\na date followed by a time, separated by a 'T'.",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations | Wikipedia ISO8601 Date and time}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 165,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an ISO8601 date-time, like `2007-04-05T14:30Z` which is\na date followed by a time, separated by a 'T'.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations | Wikipedia ISO8601 Date and time}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 166,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 163,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 164,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 160,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 512,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "datetime"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 161,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 162,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								163,
								164,
								160,
								161,
								162
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 511,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 106,
					"name": "DecimalLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an decimal number, like 3.1495.\nNote: there is no explicit min or max value."
					},
					"indexSignature": [
						{
							"id": 111,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an decimal number, like 3.1495.\nNote: there is no explicit min or max value."
							},
							"parameters": [
								{
									"id": 112,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 109,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 110,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 107,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 360,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "decimal"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 108,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								109,
								110,
								107,
								108
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 359,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 167,
					"name": "DurationLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an ISO8601 duration, like `P23DT23H`.",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Durations | Wikipedia ISO8601 Durations}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 173,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an ISO8601 duration, like `P23DT23H`.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Durations | Wikipedia ISO8601 Durations}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 171,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 172,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 168,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 535,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "duration"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 169,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 170,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								171,
								172,
								168,
								169,
								170
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 534,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 59,
					"name": "GramEdge",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramEdge is a special case of a path composed of\ntwo GramNodes."
					},
					"indexSignature": [
						{
							"id": 68,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A GramEdge is a special case of a path composed of\ntwo GramNodes."
							},
							"parameters": [
								{
									"id": 69,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 60,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The adjacent Nodes of the Edge, known as \"children\" in the AST.",
								"text": "children[0] is the 'left' Node\nchildren[1] is the 'right' Node\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 160,
									"character": 10
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"id": 48,
										"name": "GramNode"
									},
									{
										"type": "reference",
										"id": 48,
										"name": "GramNode"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 32,
								"name": "GramPath.children"
							}
						},
						{
							"id": 66,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 62,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An identifier for the path.",
								"text": "For example, '1' in `()-[1]->()` or 'a' in `(a)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 28,
								"name": "GramPath.id"
							}
						},
						{
							"id": 63,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The kind of path composition."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 62,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "PathKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "GramPath.kind"
							}
						},
						{
							"id": 64,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Labels are used to qualify a path.",
								"text": "For example, 'Aye' in `(:Aye)` or 'KNOWS' in `(a)-[:KNOWS]->(b)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 30,
								"name": "GramPath.labels"
							}
						},
						{
							"id": 67,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 65,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data content of the path."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 31,
								"name": "GramPath.record"
							}
						},
						{
							"id": 61,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, always 'path'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "path"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "GramPath.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								60,
								66,
								62,
								63,
								64,
								67,
								65,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 153,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 26,
							"name": "GramPath"
						}
					]
				},
				{
					"id": 37,
					"name": "GramEmptyPath",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramEmptyPath is an empty path with no children,\nno labels, and no record\nbut a unique singleton identity of {@link EMPTY_PATH_ID}."
					},
					"indexSignature": [
						{
							"id": 46,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A GramEmptyPath is an empty path with no children,\nno labels, and no record\nbut a unique singleton identity of {@link EMPTY_PATH_ID}."
							},
							"parameters": [
								{
									"id": 47,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 41,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 114,
									"character": 10
								}
							],
							"type": {
								"type": "tuple"
							},
							"overwrites": {
								"type": "reference",
								"id": 32,
								"name": "GramPath.children"
							}
						},
						{
							"id": 44,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 38,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 205,
									"name": "EMPTY_PATH_ID"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 28,
								"name": "GramPath.id"
							}
						},
						{
							"id": 43,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The kind of path composition."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 62,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "PathKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "GramPath.kind"
							}
						},
						{
							"id": 39,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 110,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"overwrites": {
								"type": "reference",
								"id": 30,
								"name": "GramPath.labels"
							}
						},
						{
							"id": 45,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 40,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 112,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"overwrites": {
								"type": "reference",
								"id": 31,
								"name": "GramPath.record"
							}
						},
						{
							"id": 42,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, always 'path'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "path"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "GramPath.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								41,
								44,
								38,
								43,
								39,
								45,
								40,
								42
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 107,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 26,
							"name": "GramPath"
						}
					]
				},
				{
					"id": 48,
					"name": "GramNode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramNode is a special case of a path composed of two\nempty paths, which is equivalent to having no children."
					},
					"indexSignature": [
						{
							"id": 57,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A GramNode is a special case of a path composed of two\nempty paths, which is equivalent to having no children."
							},
							"parameters": [
								{
									"id": 58,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 49,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Optimized to no children, though understood\nto have two empty paths as children."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 134,
									"character": 10
								}
							],
							"type": {
								"type": "tuple"
							},
							"overwrites": {
								"type": "reference",
								"id": 32,
								"name": "GramPath.children"
							}
						},
						{
							"id": 55,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 51,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An identifier for the path.",
								"text": "For example, '1' in `()-[1]->()` or 'a' in `(a)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 28,
								"name": "GramPath.id"
							}
						},
						{
							"id": 52,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The kind of path composition."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 62,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "PathKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "GramPath.kind"
							}
						},
						{
							"id": 53,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Labels are used to qualify a path.",
								"text": "For example, 'Aye' in `(:Aye)` or 'KNOWS' in `(a)-[:KNOWS]->(b)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 30,
								"name": "GramPath.labels"
							}
						},
						{
							"id": 56,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 54,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data content of the path."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 31,
								"name": "GramPath.record"
							}
						},
						{
							"id": 50,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, always 'path'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "path"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "GramPath.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								49,
								55,
								51,
								52,
								53,
								56,
								54,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 129,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 26,
							"name": "GramPath"
						}
					]
				},
				{
					"id": 26,
					"name": "GramPath",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GramPath is either empty, or the composition of two paths."
					},
					"indexSignature": [
						{
							"id": 35,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "GramPath is either empty, or the composition of two paths."
							},
							"parameters": [
								{
									"id": 36,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 32,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The children are the path members which the path composed.",
								"text": "The 'children' field is compatible with generic AST.\n\nEither:\n- no children\n- a single child with an implied RHS empty path\n- two children which are composed into a path\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 86,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											}
										]
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											},
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "Parent.children"
							}
						},
						{
							"id": 33,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 28,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An identifier for the path.",
								"text": "For example, '1' in `()-[1]->()` or 'a' in `(a)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The kind of path composition."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 62,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "PathKind"
							}
						},
						{
							"id": 30,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Labels are used to qualify a path.",
								"text": "For example, 'Aye' in `(:Aye)` or 'KNOWS' in `(a)-[:KNOWS]->(b)`\n"
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 34,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 31,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data content of the path."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							}
						},
						{
							"id": 27,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, always 'path'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "path"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								32,
								33,
								28,
								29,
								30,
								34,
								31,
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 46,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Parent"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 37,
							"name": "GramEmptyPath"
						},
						{
							"type": "reference",
							"id": 48,
							"name": "GramNode"
						},
						{
							"type": "reference",
							"id": 59,
							"name": "GramEdge"
						}
					]
				},
				{
					"id": 70,
					"name": "GramProperty",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramProperty is a name/value pair."
					},
					"indexSignature": [
						{
							"id": 76,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A GramProperty is a name/value pair."
							},
							"parameters": [
								{
									"id": 77,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 74,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 72,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The property name."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 255,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 75,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 71,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, always 'property'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 250,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "property"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 73,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The property value. Either a single literal, an array of literals, or a GramRecord."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 260,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 219,
								"name": "GramRecordValue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								74,
								72,
								75,
								71,
								73
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 246,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Node"
						}
					]
				},
				{
					"id": 19,
					"name": "GramSeq",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramSeq is a sequence of paths."
					},
					"indexSignature": [
						{
							"id": 24,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A GramSeq is a sequence of paths."
							},
							"parameters": [
								{
									"id": 25,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 21,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 30,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 26,
									"name": "GramPath"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Parent.children"
							}
						},
						{
							"id": 22,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 23,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 20,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type discriminator for this AST element, aways 'seq'."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 28,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "seq"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								21,
								22,
								23,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 24,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Parent"
						}
					]
				},
				{
					"id": 113,
					"name": "HexadecimalLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an integer expressed in hexadecimal, like 0xc0d3.",
						"text": "The prefix `0x` signifies a hexadecimal value to follow.\n"
					},
					"indexSignature": [
						{
							"id": 118,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an integer expressed in hexadecimal, like 0xc0d3.",
								"text": "The prefix `0x` signifies a hexadecimal value to follow.\n"
							},
							"parameters": [
								{
									"id": 119,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 116,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 117,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 114,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 377,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "hexadecimal"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 115,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								116,
								117,
								114,
								115
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 376,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 99,
					"name": "IntegerLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an integer number, like 235276234.\nNote: there is no explicit min or max value."
					},
					"indexSignature": [
						{
							"id": 104,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an integer number, like 235276234.\nNote: there is no explicit min or max value."
							},
							"parameters": [
								{
									"id": 105,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 102,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 103,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 100,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 344,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "integer"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 101,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								102,
								103,
								100,
								101
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 343,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 127,
					"name": "MeasurementLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a decimal with units, like 12.4px or 42.0mm"
					},
					"indexSignature": [
						{
							"id": 133,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a decimal with units, like 12.4px or 42.0mm"
							},
							"parameters": [
								{
									"id": 134,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 131,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 132,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 128,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 410,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "measurement"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 129,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unit suffix of the decimal value."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 415,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 130,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								131,
								132,
								128,
								129,
								130
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 409,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 120,
					"name": "OctalLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an integer expressed in octal, like 01372.",
						"text": "The prefix `0` signifies octal notation value to follow.\nWithout the leading 0, the number would represent an integer.\n"
					},
					"indexSignature": [
						{
							"id": 125,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an integer expressed in octal, like 01372.",
								"text": "The prefix `0` signifies octal notation value to follow.\nWithout the leading 0, the number would represent an integer.\n"
							},
							"parameters": [
								{
									"id": 126,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 123,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 124,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 121,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 395,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "octal"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 122,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								123,
								124,
								121,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 394,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 92,
					"name": "StringLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a string literal, like \"hello\"."
					},
					"indexSignature": [
						{
							"id": 97,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a string literal, like \"hello\"."
							},
							"parameters": [
								{
									"id": 98,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 95,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 96,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 93,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents this variant of a Literal."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 328,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 94,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								95,
								96,
								93,
								94
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 324,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					]
				},
				{
					"id": 135,
					"name": "TaggedTextLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a string value with a format indicated by a \"tag\".",
						"text": "Some well-known tags:\n- `md\\`# Hello World\\``\n- `html\\`<h1>Hello World</h1>\\``\n- `date\\`2020-07-14```\n- `time\\`17:35:42\\``\n- `uri\\`https://gram-data.github.io\\`\n- `wkt\\`POINT(-83.123 42.123)\\``\n",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals | Wikipedia Template literals}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 141,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a string value with a format indicated by a \"tag\".",
								"text": "Some well-known tags:\n- `md\\`# Hello World\\``\n- `html\\`<h1>Hello World</h1>\\``\n- `date\\`2020-07-14```\n- `time\\`17:35:42\\``\n- `uri\\`https://gram-data.github.io\\`\n- `wkt\\`POINT(-83.123 42.123)\\``\n",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals | Wikipedia Template literals}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 142,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 139,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 140,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 137,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The tag prefix of the string value."
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 456,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 136,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 138,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								139,
								140,
								137,
								136,
								138
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 450,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 78,
							"name": "TextLiteral"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 143,
							"name": "DateLiteral"
						},
						{
							"type": "reference",
							"id": 151,
							"name": "TimeLiteral"
						},
						{
							"type": "reference",
							"id": 159,
							"name": "DateTimeLiteral"
						},
						{
							"type": "reference",
							"id": 167,
							"name": "DurationLiteral"
						},
						{
							"type": "reference",
							"id": 175,
							"name": "TimeIntervalLiteral"
						},
						{
							"type": "reference",
							"id": 183,
							"name": "WellKnownTextLiteral"
						},
						{
							"type": "reference",
							"id": 191,
							"name": "UriLiteral"
						}
					]
				},
				{
					"id": 78,
					"name": "TextLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Base interface for literals, all of which\nonly provide textual value representations."
					},
					"indexSignature": [
						{
							"id": 83,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Base interface for literals, all of which\nonly provide textual value representations."
							},
							"parameters": [
								{
									"id": 84,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 81,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 82,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 80,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The variant of a node."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							}
						},
						{
							"id": 79,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								81,
								82,
								80,
								79
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 276,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Literal"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 85,
							"name": "BooleanLiteral"
						},
						{
							"type": "reference",
							"id": 92,
							"name": "StringLiteral"
						},
						{
							"type": "reference",
							"id": 99,
							"name": "IntegerLiteral"
						},
						{
							"type": "reference",
							"id": 106,
							"name": "DecimalLiteral"
						},
						{
							"type": "reference",
							"id": 113,
							"name": "HexadecimalLiteral"
						},
						{
							"type": "reference",
							"id": 120,
							"name": "OctalLiteral"
						},
						{
							"type": "reference",
							"id": 127,
							"name": "MeasurementLiteral"
						},
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 175,
					"name": "TimeIntervalLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an ISO8601 time interval, like `2007-03-01T13:00:00Z/2008-05-11T15:30:00Z`.",
						"text": "This can also represent a repeating interval.\n",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Time_intervals | Wikipedia ISO8601 Time_intervals}"
							},
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals | Wikipedia ISO8601 Repeating_intervals}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 181,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an ISO8601 time interval, like `2007-03-01T13:00:00Z/2008-05-11T15:30:00Z`.",
								"text": "This can also represent a repeating interval.\n",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Time_intervals | Wikipedia ISO8601 Time_intervals}"
									},
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals | Wikipedia ISO8601 Repeating_intervals}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 182,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 179,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 180,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 176,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 561,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "interval"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 177,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 178,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								179,
								180,
								176,
								177,
								178
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 560,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 151,
					"name": "TimeLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents an ISO8601 time, like `13:47:30`.",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Times | Wikipedia ISO8601 Times}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 157,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents an ISO8601 time, like `13:47:30`.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/ISO_8601#Times | Wikipedia ISO8601 Times}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 158,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 155,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 156,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 152,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 492,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "time"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 153,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 154,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								155,
								156,
								152,
								153,
								154
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 491,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 191,
					"name": "UriLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a well-formed URI.",
						"text": "## Some examples:\n\n### `geo`\n\n> A 'geo' URI identifies a physical location in a two- or three-dimensional\n> coordinate reference system in a compact, simple, human-readable, and\n> protocol-independent way.\n\n```\nuri`geo:39.282495,-76.594709`\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "{@link https://tools.ietf.org/html/rfc5870 | IETF RFC5870 }\n\n### `plus`\n\n> A 'plus' URI identifies a physical location encoded as\n> Open Location Code, a \"plus code\".\n\n```\nuri`plus:7CJ4+W4 Baltimore, MD`\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link https://github.com/google/open-location-code | Open Location Code }\n\n### `h3`\n\n> An 'h3' URI identifies a physical location encoded using\n> the H3 geospatial indexing system, a multi-precision hexagonal\n> tiling of the sphere indexed with hierarchical linear indexes.\n\n```\nuri`h3:8c2aa8c76b11bff`\n```\n"
							},
							{
								"tag": "see",
								"text": "{@link https://h3geo.org | H3 }\n\n### `http(s)`\n\n> Hopefully This Thing Presents Sensibly, a popular scheme used\n>on the interwebs.\n\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 197,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a well-formed URI.",
								"text": "## Some examples:\n\n### `geo`\n\n> A 'geo' URI identifies a physical location in a two- or three-dimensional\n> coordinate reference system in a compact, simple, human-readable, and\n> protocol-independent way.\n\n```\nuri`geo:39.282495,-76.594709`\n```\n",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://tools.ietf.org/html/rfc5870 | IETF RFC5870 }\n\n### `plus`\n\n> A 'plus' URI identifies a physical location encoded as\n> Open Location Code, a \"plus code\".\n\n```\nuri`plus:7CJ4+W4 Baltimore, MD`\n```\n"
									},
									{
										"tag": "see",
										"text": "{@link https://github.com/google/open-location-code | Open Location Code }\n\n### `h3`\n\n> An 'h3' URI identifies a physical location encoded using\n> the H3 geospatial indexing system, a multi-precision hexagonal\n> tiling of the sphere indexed with hierarchical linear indexes.\n\n```\nuri`h3:8c2aa8c76b11bff`\n```\n"
									},
									{
										"tag": "see",
										"text": "{@link https://h3geo.org | H3 }\n\n### `http(s)`\n\n> Hopefully This Thing Presents Sensibly, a popular scheme used\n>on the interwebs.\n\n"
									}
								]
							},
							"parameters": [
								{
									"id": 198,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 195,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 196,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 192,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 643,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "uri"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 193,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 194,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								195,
								196,
								192,
								193,
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 642,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 183,
					"name": "WellKnownTextLiteral",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a WKT 2 geospatial value, like `POINT(-83.123 42.123)`",
						"tags": [
							{
								"tag": "see",
								"text": "{@link http://docs.opengeospatial.org/is/18-010r7/18-010r7.html | Opengeospatial WKT}"
							},
							{
								"tag": "see",
								"text": "{@link https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry | Wikipedia Well-known text geometry}\n"
							}
						]
					},
					"indexSignature": [
						{
							"id": 189,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a WKT 2 geospatial value, like `POINT(-83.123 42.123)`",
								"tags": [
									{
										"tag": "see",
										"text": "{@link http://docs.opengeospatial.org/is/18-010r7/18-010r7.html | Opengeospatial WKT}"
									},
									{
										"tag": "see",
										"text": "{@link https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry | Wikipedia Well-known text geometry}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 190,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 187,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Information from the ecosystem."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Data"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Node.data"
							}
						},
						{
							"id": 188,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of a node in a source document.\nMust not be present if a node is generated."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/unist/index.d.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Position"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Node.position"
							}
						},
						{
							"id": 184,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 585,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "wkt"
							},
							"overwrites": {
								"type": "reference",
								"id": 137,
								"name": "TaggedTextLiteral.tag"
							}
						},
						{
							"id": 185,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 451,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "tagged"
							},
							"overwrites": {
								"type": "reference",
								"id": 80,
								"name": "Node.type"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "TaggedTextLiteral.type"
							}
						},
						{
							"id": 186,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-ast/src/index.ts",
									"line": 277,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Literal.value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 79,
								"name": "TextLiteral.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								187,
								188,
								184,
								185,
								186
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 584,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 135,
							"name": "TaggedTextLiteral"
						}
					]
				},
				{
					"id": 216,
					"name": "CombinationKind",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Kind of path which combines two paths together\nwithout implying any semantics.",
						"text": "One of:\n\n- pair  `(a),(b)`\n\n"
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 196,
							"character": 27
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "pair"
					}
				},
				{
					"id": 230,
					"name": "GramLiteral",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Discrimination union of all possible literals."
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 283,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 85,
								"name": "BooleanLiteral"
							},
							{
								"type": "reference",
								"id": 92,
								"name": "StringLiteral"
							},
							{
								"type": "reference",
								"id": 135,
								"name": "TaggedTextLiteral"
							},
							{
								"type": "reference",
								"id": 99,
								"name": "IntegerLiteral"
							},
							{
								"type": "reference",
								"id": 127,
								"name": "MeasurementLiteral"
							},
							{
								"type": "reference",
								"id": 106,
								"name": "DecimalLiteral"
							},
							{
								"type": "reference",
								"id": 113,
								"name": "HexadecimalLiteral"
							},
							{
								"type": "reference",
								"id": 120,
								"name": "OctalLiteral"
							}
						]
					}
				},
				{
					"id": 218,
					"name": "GramPathlike",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GramPathlike is a discriminated union of GramPath with\nits two primary specializations, GramNode and GramEdge."
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 213,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							},
							{
								"type": "reference",
								"id": 48,
								"name": "GramNode"
							},
							{
								"type": "reference",
								"id": 59,
								"name": "GramEdge"
							}
						]
					}
				},
				{
					"id": 220,
					"name": "GramRecord",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A GramRecord is a map of name/value pairs."
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 228,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 219,
								"name": "GramRecordValue"
							}
						],
						"name": "Map"
					}
				},
				{
					"id": 219,
					"name": "GramRecordValue",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GramRecordValue is a union of literals, literal arrays and nested records.\nThis forms a familiar OO-style structure."
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 222,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 230,
								"name": "GramLiteral"
							},
							{
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 219,
									"name": "GramRecordValue"
								}
							}
						]
					}
				},
				{
					"id": 217,
					"name": "PathKind",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "PathKind describes the nature of the\npath composition.",
						"text": "One of:\n\n- RelationshipKind: 'left', 'right', 'either'\n- CombinationKind:  `pair`\n"
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 207,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 215,
								"name": "RelationshipKind"
							},
							{
								"type": "reference",
								"id": 216,
								"name": "CombinationKind"
							}
						]
					}
				},
				{
					"id": 215,
					"name": "RelationshipKind",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Kind of path which forms a graph relationship.",
						"text": "One of:\n\n- left   `(a)<--(b)`\n- right  `(a)-->(b)`\n- either `(a)--(b)`\n\n"
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 185,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "either"
							}
						]
					}
				},
				{
					"id": 255,
					"name": "TaggedLiteral",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 429,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 143,
								"name": "DateLiteral"
							},
							{
								"type": "reference",
								"id": 151,
								"name": "TimeLiteral"
							},
							{
								"type": "reference",
								"id": 159,
								"name": "DateTimeLiteral"
							},
							{
								"type": "reference",
								"id": 175,
								"name": "TimeIntervalLiteral"
							},
							{
								"type": "reference",
								"id": 167,
								"name": "DurationLiteral"
							},
							{
								"type": "reference",
								"id": 183,
								"name": "WellKnownTextLiteral"
							},
							{
								"type": "reference",
								"id": 191,
								"name": "UriLiteral"
							}
						]
					}
				},
				{
					"id": 205,
					"name": "EMPTY_PATH_ID",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Constant identity for empty paths: `ø`."
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 100,
							"character": 26
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "ø"
					},
					"defaultValue": "\"ø\""
				},
				{
					"id": 2,
					"name": "boolean",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 1,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/true|false|TRUE|FALSE\\b(?!@)/"
				},
				{
					"id": 14,
					"name": "checkIdentifierRegex",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 14,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "new RegExp('^' + identifier.source + '$')"
				},
				{
					"id": 6,
					"name": "decimal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 5,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/-?(?:[0-9]|[1-9][0-9]+)\\.[0-9]+(?:[eE][-+]?[0-9]+)?\\b(?!@)/"
				},
				{
					"id": 9,
					"name": "doubleQuotedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 8,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/\"(?:\\\\[\"bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\"/"
				},
				{
					"id": 3,
					"name": "hexadecimal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 2,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/-?0x(?:[0-9a-fA-F]+)\\b(?!@)/"
				},
				{
					"id": 13,
					"name": "identifier",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 12,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/[0-9a-zA-Z_@]+\\b@*/"
				},
				{
					"id": 7,
					"name": "integer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 6,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/-?(?:[0-9]|[1-9][0-9]+)(?:[eE][-+]?[0-9]+)?\\b(?!@)/"
				},
				{
					"id": 5,
					"name": "measurement",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 4,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?[a-zA-Z]+\\b(?!@)/"
				},
				{
					"id": 4,
					"name": "octal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 3,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/-?0(?:[0-7]+)\\b(?!@)/"
				},
				{
					"id": 10,
					"name": "singleQuotedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 9,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/'(?:\\\\['bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*'/"
				},
				{
					"id": 12,
					"name": "symbol",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 11,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/[a-zA-Z_][0-9a-zA-Z_]*\\b(?!@)/"
				},
				{
					"id": 8,
					"name": "taggedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 7,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/[a-zA-Z][0-9a-zA-Z_@]*`(?:\\\\[`bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^`\\\\])*`/"
				},
				{
					"id": 11,
					"name": "tickedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 10,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/`(?:\\\\[`bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^`\\\\])*`/"
				},
				{
					"id": 234,
					"name": "isBooleanLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for BooleanLiteral."
					},
					"signatures": [
						{
							"id": 235,
							"name": "isBooleanLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for BooleanLiteral."
							},
							"parameters": [
								{
									"id": 236,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TextLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 318,
							"character": 29
						}
					]
				},
				{
					"id": 259,
					"name": "isDateLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for DateLiteral.",
						"text": "Note: this does not validate the text representation.\n"
					},
					"signatures": [
						{
							"id": 260,
							"name": "isDateLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for DateLiteral.",
								"text": "Note: this does not validate the text representation.\n"
							},
							"parameters": [
								{
									"id": 261,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "DateLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 483,
							"character": 26
						}
					]
				},
				{
					"id": 265,
					"name": "isDateTimeLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for DateTimeLiteral.",
						"text": "Note: this does not validate the text representation.\n"
					},
					"signatures": [
						{
							"id": 266,
							"name": "isDateTimeLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for DateTimeLiteral.",
								"text": "Note: this does not validate the text representation.\n"
							},
							"parameters": [
								{
									"id": 267,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "DateTimeLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 522,
							"character": 30
						}
					]
				},
				{
					"id": 243,
					"name": "isDecimalLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for DecimalLiteral."
					},
					"signatures": [
						{
							"id": 244,
							"name": "isDecimalLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for DecimalLiteral."
							},
							"parameters": [
								{
									"id": 245,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "DecimalLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 368,
							"character": 29
						}
					]
				},
				{
					"id": 268,
					"name": "isDuration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for DurationLiteral.",
						"text": "Note: this does not validate the text representation.\n"
					},
					"signatures": [
						{
							"id": 269,
							"name": "isDuration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for DurationLiteral.",
								"text": "Note: this does not validate the text representation.\n"
							},
							"parameters": [
								{
									"id": 270,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "DurationLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 545,
							"character": 23
						}
					]
				},
				{
					"id": 212,
					"name": "isGramEdge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramEdge."
					},
					"signatures": [
						{
							"id": 213,
							"name": "isGramEdge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramEdge."
							},
							"parameters": [
								{
									"id": 214,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramEdge"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 168,
							"character": 23
						}
					]
				},
				{
					"id": 206,
					"name": "isGramEmptyPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramEmptyPath."
					},
					"signatures": [
						{
							"id": 207,
							"name": "isGramEmptyPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramEmptyPath."
							},
							"parameters": [
								{
									"id": 208,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramEmptyPath"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 122,
							"character": 28
						}
					]
				},
				{
					"id": 231,
					"name": "isGramLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramLiteral."
					},
					"signatures": [
						{
							"id": 232,
							"name": "isGramLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramLiteral."
							},
							"parameters": [
								{
									"id": 233,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 298,
							"character": 26
						}
					]
				},
				{
					"id": 224,
					"name": "isGramLiteralArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 225,
							"name": "isGramLiteralArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 226,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 219,
										"name": "GramRecordValue"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "v",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "GramLiteral"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 240,
							"character": 31
						}
					]
				},
				{
					"id": 209,
					"name": "isGramNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramNode."
					},
					"signatures": [
						{
							"id": 210,
							"name": "isGramNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramNode."
							},
							"parameters": [
								{
									"id": 211,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramNode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 142,
							"character": 23
						}
					]
				},
				{
					"id": 202,
					"name": "isGramPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for a Path."
					},
					"signatures": [
						{
							"id": 203,
							"name": "isGramPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for a Path."
							},
							"parameters": [
								{
									"id": 204,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramPath"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 94,
							"character": 23
						}
					]
				},
				{
					"id": 227,
					"name": "isGramProperty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramProperty."
					},
					"signatures": [
						{
							"id": 228,
							"name": "isGramProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramProperty."
							},
							"parameters": [
								{
									"id": 229,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramProperty"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 268,
							"character": 27
						}
					]
				},
				{
					"id": 221,
					"name": "isGramRecord",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A type guard to narrow a GramRecordValue to a GramRecord.",
						"text": "Warning: this is not a runtime guarantee\n"
					},
					"signatures": [
						{
							"id": 222,
							"name": "isGramRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A type guard to narrow a GramRecordValue to a GramRecord.",
								"text": "Warning: this is not a runtime guarantee\n"
							},
							"parameters": [
								{
									"id": 223,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any GramRecordValue\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "v",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramRecord"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 237,
							"character": 25
						}
					]
				},
				{
					"id": 199,
					"name": "isGramSeq",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for GramSeq."
					},
					"signatures": [
						{
							"id": 200,
							"name": "isGramSeq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for GramSeq."
							},
							"parameters": [
								{
									"id": 201,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "GramSeq"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 38,
							"character": 22
						}
					]
				},
				{
					"id": 246,
					"name": "isHexadecimalLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for HexadecimalLiteral."
					},
					"signatures": [
						{
							"id": 247,
							"name": "isHexadecimalLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for HexadecimalLiteral."
							},
							"parameters": [
								{
									"id": 248,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "HexadecimalLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 385,
							"character": 33
						}
					]
				},
				{
					"id": 240,
					"name": "isIntegerLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for IntegerLiteral."
					},
					"signatures": [
						{
							"id": 241,
							"name": "isIntegerLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for IntegerLiteral."
							},
							"parameters": [
								{
									"id": 242,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "IntegerLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 352,
							"character": 29
						}
					]
				},
				{
					"id": 252,
					"name": "isMeasurementLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for MeasurementLiteral."
					},
					"signatures": [
						{
							"id": 253,
							"name": "isMeasurementLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for MeasurementLiteral."
							},
							"parameters": [
								{
									"id": 254,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "MeasurementLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 423,
							"character": 33
						}
					]
				},
				{
					"id": 249,
					"name": "isOctalLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for OctalLiteral."
					},
					"signatures": [
						{
							"id": 250,
							"name": "isOctalLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for OctalLiteral."
							},
							"parameters": [
								{
									"id": 251,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "OctalLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 403,
							"character": 27
						}
					]
				},
				{
					"id": 237,
					"name": "isStringLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for StringLiteral."
					},
					"signatures": [
						{
							"id": 238,
							"name": "isStringLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for StringLiteral."
							},
							"parameters": [
								{
									"id": 239,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TextLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 336,
							"character": 28
						}
					]
				},
				{
					"id": 256,
					"name": "isTaggedLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for TaggedTextLiteral."
					},
					"signatures": [
						{
							"id": 257,
							"name": "isTaggedLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for TaggedTextLiteral."
							},
							"parameters": [
								{
									"id": 258,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TaggedLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 464,
							"character": 28
						}
					]
				},
				{
					"id": 271,
					"name": "isTimeInterval",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for TimeIntervalLiteral.",
						"text": "Note: this does not validate the text representation.\n"
					},
					"signatures": [
						{
							"id": 272,
							"name": "isTimeInterval",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for TimeIntervalLiteral.",
								"text": "Note: this does not validate the text representation.\n"
							},
							"parameters": [
								{
									"id": 273,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TimeIntervalLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 571,
							"character": 27
						}
					]
				},
				{
					"id": 262,
					"name": "isTimeLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for TimeLiteral.",
						"text": "Note: this does not validate the text representation.\n"
					},
					"signatures": [
						{
							"id": 263,
							"name": "isTimeLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for TimeLiteral.",
								"text": "Note: this does not validate the text representation.\n"
							},
							"parameters": [
								{
									"id": 264,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TaggedTextLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 502,
							"character": 26
						}
					]
				},
				{
					"id": 277,
					"name": "isUriLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for UriLiteral."
					},
					"signatures": [
						{
							"id": 278,
							"name": "isUriLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for UriLiteral."
							},
							"parameters": [
								{
									"id": 279,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "UriLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 651,
							"character": 25
						}
					]
				},
				{
					"id": 15,
					"name": "isValidIdentifier",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Checks whether the given string is a valid identifier."
					},
					"signatures": [
						{
							"id": 16,
							"name": "isValidIdentifier",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Checks whether the given string is a valid identifier."
							},
							"parameters": [
								{
									"id": 17,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									},
									{
										"type": "stringLiteral",
										"value": ""
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/gram-tokens.ts",
							"line": 20,
							"character": 30
						}
					]
				},
				{
					"id": 274,
					"name": "isWellKnownTextLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Type guard for WellKnownTextLiteral."
					},
					"signatures": [
						{
							"id": 275,
							"name": "isWellKnownTextLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type guard for WellKnownTextLiteral."
							},
							"parameters": [
								{
									"id": 276,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "any object\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "o",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "WellKnownTextLiteral"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ast/src/index.ts",
							"line": 593,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						85,
						143,
						159,
						106,
						167,
						59,
						37,
						48,
						26,
						70,
						19,
						113,
						99,
						127,
						120,
						92,
						135,
						78,
						175,
						151,
						191,
						183
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						216,
						230,
						218,
						220,
						219,
						217,
						215,
						255
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						205,
						2,
						14,
						6,
						9,
						3,
						13,
						7,
						5,
						4,
						10,
						12,
						8,
						11
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						234,
						259,
						265,
						243,
						268,
						212,
						206,
						231,
						224,
						209,
						202,
						227,
						221,
						199,
						246,
						240,
						252,
						249,
						237,
						256,
						271,
						262,
						277,
						15,
						274
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-ast/src/gram-tokens.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 280,
			"name": "gram-builder",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-builder/src/index.ts",
			"comment": {
				"text": "`()-[build]->(ast)`\n\nBuild valid `gram` AST.\n\n## How to gram-builder\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-builder\n```\n\n### Build an AST:\n\n``` TypeScript\nimport { node, edge } from '@gram-data/gram-builder';\n\nconst left = node('a');\nconst right = node('b');\nconst ast = edge([left, right], 'right');\n```\n\n## Next Steps\n\n- Enrich record properties with js objects using [[gram-value]]\n- Serializes to a string using [[gram-stringify]]\n- Introspect the AST using [[gram-ast]]"
			},
			"children": [
				{
					"id": 281,
					"name": "PathAttributes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 282,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 78,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 285,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 81,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 217,
								"name": "PathKind"
							}
						},
						{
							"id": 283,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 79,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 284,
							"name": "record",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 80,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								282,
								285,
								283,
								284
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 77,
							"character": 31
						}
					]
				},
				{
					"id": 286,
					"name": "Children",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 287,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 37,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 288,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 289,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-builder/src/index.ts",
											"line": 37,
											"character": 37
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 378,
					"name": "boolean",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 379,
							"name": "boolean",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 380,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 85,
								"name": "BooleanLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 410,
							"character": 20
						}
					]
				},
				{
					"id": 310,
					"name": "cons",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build a path."
					},
					"signatures": [
						{
							"id": 311,
							"name": "cons",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build a path."
							},
							"parameters": [
								{
									"id": 312,
									"name": "members",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "sub-paths to compose"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "tuple"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"id": 26,
														"name": "GramPath"
													}
												]
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"id": 26,
														"name": "GramPath"
													},
													{
														"type": "reference",
														"id": 26,
														"name": "GramPath"
													}
												]
											}
										]
									}
								},
								{
									"id": 313,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "attributes\n"
									},
									"type": {
										"type": "reference",
										"id": 281,
										"name": "PathAttributes"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 112,
							"character": 17
						}
					]
				},
				{
					"id": 407,
					"name": "date",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 408,
							"name": "date",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 409,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 143,
								"name": "DateLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 461,
							"character": 17
						}
					]
				},
				{
					"id": 297,
					"name": "dateToDayOfMonth",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 298,
							"name": "dateToDayOfMonth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 54,
							"character": 22
						}
					]
				},
				{
					"id": 294,
					"name": "dateToYMD",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 295,
							"name": "dateToYMD",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 52,
							"character": 15
						}
					]
				},
				{
					"id": 410,
					"name": "dayOfMonth",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 411,
							"name": "dayOfMonth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 412,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 143,
								"name": "DateLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 467,
							"character": 23
						}
					]
				},
				{
					"id": 391,
					"name": "decimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 392,
							"name": "decimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 393,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"name": "DecimalLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 431,
							"character": 20
						}
					]
				},
				{
					"id": 416,
					"name": "duration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 417,
							"name": "duration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 418,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 167,
								"name": "DurationLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 479,
							"character": 21
						}
					]
				},
				{
					"id": 327,
					"name": "edge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build an Edge."
					},
					"signatures": [
						{
							"id": 328,
							"name": "edge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build an Edge."
							},
							"parameters": [
								{
									"id": 329,
									"name": "children",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"id": 48,
												"name": "GramNode"
											},
											{
												"type": "reference",
												"id": 48,
												"name": "GramNode"
											}
										]
									}
								},
								{
									"id": 330,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 215,
										"name": "RelationshipKind"
									}
								},
								{
									"id": 331,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 332,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 333,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 59,
								"name": "GramEdge"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 212,
							"character": 17
						}
					]
				},
				{
					"id": 320,
					"name": "empty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Convenience function for retrieving the singleton GramEmptyPath."
					},
					"signatures": [
						{
							"id": 321,
							"name": "empty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Convenience function for retrieving the singleton GramEmptyPath."
							},
							"type": {
								"type": "reference",
								"id": 37,
								"name": "GramEmptyPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 181,
							"character": 18
						}
					]
				},
				{
					"id": 347,
					"name": "emptyRecord",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Create a new, empty GramRecord."
					},
					"signatures": [
						{
							"id": 348,
							"name": "emptyRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Create a new, empty GramRecord."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 219,
										"name": "GramRecordValue"
									}
								],
								"name": "Map"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 269,
							"character": 24
						}
					]
				},
				{
					"id": 419,
					"name": "flatten",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 420,
							"name": "flatten",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 421,
									"name": "xs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 422,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 489,
							"character": 20
						}
					]
				},
				{
					"id": 364,
					"name": "getDown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Produces a Lens down into nested GramRecords.",
						"text": "### Examples:\n\nDescend using either an array of names, or dot notation.\n\n```\nconst o = g.objectToRecord({a:{b:{c:g.string(\"value\")}}})\n\nconst getAbc1 = g.getDown(['a','b','c']);\nconst getAbc2 = g.getDown(\"a.b.c\");\n\nexpect(getAbc1(o)).toStrictEqual(getAbc2(o));\n```\n\nDescend, then apply a function to extract the text value.\n\n```\nconst o = objectToRecord({a:{b:{c:string(\"value\")}}})\nconst getAbc = getDown(\"a.b.c\", getValue);\n\nexpect(getAbc(o)).toBe(\"value\");\n```\n"
					},
					"signatures": [
						{
							"id": 365,
							"name": "getDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Produces a Lens down into nested GramRecords.",
								"text": "### Examples:\n\nDescend using either an array of names, or dot notation.\n\n```\nconst o = g.objectToRecord({a:{b:{c:g.string(\"value\")}}})\n\nconst getAbc1 = g.getDown(['a','b','c']);\nconst getAbc2 = g.getDown(\"a.b.c\");\n\nexpect(getAbc1(o)).toStrictEqual(getAbc2(o));\n```\n\nDescend, then apply a function to extract the text value.\n\n```\nconst o = objectToRecord({a:{b:{c:string(\"value\")}}})\nconst getAbc = getDown(\"a.b.c\", getValue);\n\nexpect(getAbc(o)).toBe(\"value\");\n```\n"
							},
							"parameters": [
								{
									"id": 366,
									"name": "hierarchy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "array or dot-notation path to descend\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 367,
									"name": "f",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 368,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 369,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 370,
																	"name": "r",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 219,
																		"name": "GramRecordValue"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 354,
							"character": 20
						}
					]
				},
				{
					"id": 358,
					"name": "getLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Produces a Lens into a literal value with a GramRecord."
					},
					"signatures": [
						{
							"id": 359,
							"name": "getLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Produces a Lens into a literal value with a GramRecord."
							},
							"parameters": [
								{
									"id": 360,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 308,
							"character": 23
						}
					]
				},
				{
					"id": 361,
					"name": "getRecord",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Produces a Lens into a record value with a GramRecord."
					},
					"signatures": [
						{
							"id": 362,
							"name": "getRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Produces a Lens into a record value with a GramRecord."
							},
							"parameters": [
								{
									"id": 363,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 320,
							"character": 22
						}
					]
				},
				{
					"id": 355,
					"name": "getValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Extracts the value from a GramLiteral, if available."
					},
					"signatures": [
						{
							"id": 356,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Extracts the value from a GramLiteral, if available."
							},
							"parameters": [
								{
									"id": 357,
									"name": "l",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 219,
												"name": "GramRecordValue"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 300,
							"character": 21
						}
					]
				},
				{
					"id": 394,
					"name": "hexadecimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 395,
							"name": "hexadecimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 396,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 113,
								"name": "HexadecimalLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 436,
							"character": 24
						}
					]
				},
				{
					"id": 388,
					"name": "integer",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 389,
							"name": "integer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 390,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 99,
								"name": "IntegerLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 426,
							"character": 20
						}
					]
				},
				{
					"id": 306,
					"name": "listToPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Reduce a list of paths into a single path composed using the given kind."
					},
					"signatures": [
						{
							"id": 307,
							"name": "listToPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reduce a list of paths into a single path composed using the given kind."
							},
							"parameters": [
								{
									"id": 308,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "the kind to apply to all sub-paths"
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "PathKind"
									},
									"defaultValue": "\"pair\""
								},
								{
									"id": 309,
									"name": "pathlist",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sub-paths to be paired"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 26,
											"name": "GramPath"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 91,
							"character": 23
						}
					]
				},
				{
					"id": 400,
					"name": "measurement",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 401,
							"name": "measurement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 402,
									"name": "unit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 403,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "MeasurementLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 446,
							"character": 24
						}
					]
				},
				{
					"id": 322,
					"name": "node",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build a GramNode."
					},
					"signatures": [
						{
							"id": 323,
							"name": "node",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build a GramNode."
							},
							"parameters": [
								{
									"id": 324,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "identifier"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 325,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 326,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 48,
								"name": "GramNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 191,
							"character": 17
						}
					]
				},
				{
					"id": 290,
					"name": "normalizeChildren",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 291,
							"name": "normalizeChildren",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 292,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "UnistNode"
									}
								}
							],
							"parameters": [
								{
									"id": 293,
									"name": "children",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 286,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "UnistNode"
												}
											}
										],
										"name": "Children"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T",
									"constraint": {
										"type": "reference",
										"name": "UnistNode"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 39,
							"character": 26
						}
					]
				},
				{
					"id": 352,
					"name": "objectToRecord",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Transforms a plain js object into a GramRecord."
					},
					"signatures": [
						{
							"id": 353,
							"name": "objectToRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Transforms a plain js object into a GramRecord."
							},
							"parameters": [
								{
									"id": 354,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 288,
							"character": 27
						}
					]
				},
				{
					"id": 397,
					"name": "octal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 398,
							"name": "octal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 399,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 120,
								"name": "OctalLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 441,
							"character": 18
						}
					]
				},
				{
					"id": 341,
					"name": "pair",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build a pair"
					},
					"signatures": [
						{
							"id": 342,
							"name": "pair",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build a pair"
							},
							"parameters": [
								{
									"id": 343,
									"name": "members",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											},
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											}
										]
									}
								},
								{
									"id": 344,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 345,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 346,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 258,
							"character": 17
						}
					]
				},
				{
					"id": 334,
					"name": "path",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build a pair"
					},
					"signatures": [
						{
							"id": 335,
							"name": "path",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build a pair"
							},
							"parameters": [
								{
									"id": 336,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 217,
										"name": "PathKind"
									}
								},
								{
									"id": 337,
									"name": "members",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											},
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											}
										]
									}
								},
								{
									"id": 338,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 339,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 340,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 235,
							"character": 17
						}
					]
				},
				{
					"id": 349,
					"name": "propertiesToRecord",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Reduces an array of GramProperties into a GramRecord."
					},
					"signatures": [
						{
							"id": 350,
							"name": "propertiesToRecord",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reduces an array of GramProperties into a GramRecord."
							},
							"parameters": [
								{
									"id": 351,
									"name": "properties",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 70,
											"name": "GramProperty"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 220,
								"name": "GramRecord"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 276,
							"character": 31
						}
					]
				},
				{
					"id": 371,
					"name": "property",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Builds a GramProperty from a name"
					},
					"signatures": [
						{
							"id": 372,
							"name": "property",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Builds a GramProperty from a name"
							},
							"parameters": [
								{
									"id": 373,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 374,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 70,
								"name": "GramProperty"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 373,
							"character": 21
						}
					]
				},
				{
					"id": 375,
					"name": "propertyValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 376,
							"name": "propertyValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 377,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 219,
								"name": "GramRecordValue"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 382,
							"character": 26
						}
					]
				},
				{
					"id": 300,
					"name": "seq",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Build a path sequence that represents a graph."
					},
					"signatures": [
						{
							"id": 301,
							"name": "seq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Build a path sequence that represents a graph."
							},
							"parameters": [
								{
									"id": 302,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sequence of paths through history"
									},
									"type": {
										"type": "reference",
										"id": 286,
										"typeArguments": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											}
										],
										"name": "Children"
									}
								},
								{
									"id": 303,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "optional reference identifier. The \"name\" of this graph instance."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 304,
									"name": "labels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "optional labels"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 305,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "optional graph-level data\n"
									},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "GramSeq"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 64,
							"character": 16
						}
					]
				},
				{
					"id": 381,
					"name": "string",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 382,
							"name": "string",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 383,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 92,
								"name": "StringLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 415,
							"character": 19
						}
					]
				},
				{
					"id": 384,
					"name": "tagged",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 385,
							"name": "tagged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 386,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 387,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 135,
								"name": "TaggedTextLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 420,
							"character": 19
						}
					]
				},
				{
					"id": 413,
					"name": "time",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 414,
							"name": "time",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 415,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 151,
								"name": "TimeLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 473,
							"character": 17
						}
					]
				},
				{
					"id": 404,
					"name": "year",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 405,
							"name": "year",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 406,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 143,
								"name": "DateLiteral"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 455,
							"character": 17
						}
					]
				},
				{
					"id": 314,
					"name": "EMPTY_PATH",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Singleton instance of GramEmptyPath"
					},
					"children": [
						{
							"id": 319,
							"name": "children",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 175,
									"character": 10
								}
							],
							"type": {
								"type": "tuple"
							},
							"defaultValue": "[]"
						},
						{
							"id": 316,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 172,
									"character": 4
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "ø"
							},
							"defaultValue": "EMPTY_PATH_ID"
						},
						{
							"id": 317,
							"name": "labels",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 173,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"defaultValue": "undefined"
						},
						{
							"id": 318,
							"name": "record",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 174,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"defaultValue": "undefined"
						},
						{
							"id": 315,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-builder/src/index.ts",
									"line": 171,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "path"
							},
							"defaultValue": "\"path\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								319,
								316,
								317,
								318,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-builder/src/index.ts",
							"line": 170,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						281
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						286
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						378,
						310,
						407,
						297,
						294,
						410,
						391,
						416,
						327,
						320,
						347,
						419,
						364,
						358,
						361,
						355,
						394,
						388,
						306,
						400,
						322,
						290,
						352,
						397,
						341,
						334,
						349,
						371,
						375,
						300,
						381,
						384,
						413,
						404
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-builder/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 423,
			"name": "gram-identity",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-identity/src/gram-identity.ts",
			"comment": {
				"text": "`(ast)-[identify]->(ast)`\n\nCollection of identity generating functions and an AST\nprocessing plugin which applies identity to any paths\nwhich have none. \n\n## How to gram-identity\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-builder\n```\n\n### Build an AST:\n\n``` TypeScript\nimport { node, edge } from '@gram-data/gram-builder';\n\nconst left = node('a');\nconst right = node('b');\nconst ast = edge([left, right], 'right');\n```\n\n## Next Steps\n\n- Enrich record properties with js objects using [[gram-value]]\n- Serializes to a string using [[gram-stringify]]\n- Introspect the AST using [[gram-ast]]"
			},
			"children": [
				{
					"id": 472,
					"name": "IDGenerator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 446
				},
				{
					"id": 471,
					"name": "alphabets",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 424
				},
				{
					"id": 473,
					"name": "counterIDGenerator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 476
				},
				{
					"id": 474,
					"name": "nanoidGenerator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 452
				},
				{
					"id": 458,
					"name": "IdentityPluginSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 460,
							"name": "alphabet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 459,
							"name": "generator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "counter"
									},
									{
										"type": "stringLiteral",
										"value": "nanoid"
									}
								]
							}
						},
						{
							"id": 461,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 16,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								460,
								459,
								461
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
							"line": 13,
							"character": 32
						}
					]
				},
				{
					"id": 446,
					"name": "IDGenerator",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity.ts",
							"line": 26,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 447,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 448,
									"name": "generate",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "packages/gram-identity/src/gram-identity.ts",
											"line": 27,
											"character": 10
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 449,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 450,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/gram-identity/src/gram-identity.ts",
													"line": 27,
													"character": 11
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										448
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 26,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 462,
					"name": "visit",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
							"line": 11,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "require('unist-util-visit')"
				},
				{
					"id": 476,
					"name": "counterIDGenerator",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Creates an IDGenerator based on incrementing numbers."
					},
					"signatures": [
						{
							"id": 477,
							"name": "counterIDGenerator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Creates an IDGenerator based on incrementing numbers."
							},
							"parameters": [
								{
									"id": 478,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 472,
								"name": "IDGenerator"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/counter-generator.ts",
							"line": 7,
							"character": 31
						}
					]
				},
				{
					"id": 467,
					"name": "gramIdentityPlugin",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 468,
							"name": "gramIdentityPlugin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 469,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 458,
										"name": "IdentityPluginSettings"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Transformer"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
							"line": 25,
							"character": 24
						}
					]
				},
				{
					"id": 452,
					"name": "nanoidGenerator",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Factory for creating an IDGenerator based on\n[nanoid](https://github.com/ai/nanoid)"
					},
					"signatures": [
						{
							"id": 453,
							"name": "nanoidGenerator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Factory for creating an IDGenerator based on\n[nanoid](https://github.com/ai/nanoid)"
							},
							"parameters": [
								{
									"id": 454,
									"name": "alphabet",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "alphabets.base64"
								},
								{
									"id": 455,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "21"
								},
								{
									"id": 456,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 472,
								"name": "IDGenerator"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/nanoid-generator.ts",
							"line": 9,
							"character": 28
						}
					]
				},
				{
					"id": 424,
					"name": "alphabets",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 429,
							"name": "astrologyBase12",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 6,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"♈︎♉︎♊︎♋︎♌︎♍︎♎︎♏︎♐︎♑︎♒︎♓︎\""
						},
						{
							"id": 428,
							"name": "base10",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 5,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789\""
						},
						{
							"id": 430,
							"name": "base11",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 7,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789a\""
						},
						{
							"id": 432,
							"name": "base16",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789abcdef\""
						},
						{
							"id": 425,
							"name": "base2",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 2,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"01\""
						},
						{
							"id": 434,
							"name": "base32",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\""
						},
						{
							"id": 437,
							"name": "base32Hex",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789ABCDEFGHIJKLMNOPQRSTUV\""
						},
						{
							"id": 438,
							"name": "base36",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 15,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789abcdefghijklmnopqrstuvwxyz\""
						},
						{
							"id": 441,
							"name": "base58",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\""
						},
						{
							"id": 443,
							"name": "base62",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\""
						},
						{
							"id": 444,
							"name": "base64",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_@\""
						},
						{
							"id": 427,
							"name": "base8",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 4,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"01234567\""
						},
						{
							"id": 440,
							"name": "cards56",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"🂡🂢🂣🂤🂥🂦🂧🂨🂩🂪🂫🂬🂭🂮🂱🂲🂳🂴🂵🂶🂷🂸🂹🂺🂻🂼🂽🂾🃁🃂🃃🃄🃅🃆🃇🃈🃉🃊🃋🃌🃍🃎🃑🃒🃓🃔🃕🃖🃗🃘🃙🃝🃞\""
						},
						{
							"id": 431,
							"name": "chessBase12",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 8,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"♚♛♜♝♞♟♔♕♖♗♘♙\""
						},
						{
							"id": 445,
							"name": "cookieBase90",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~\""
						},
						{
							"id": 436,
							"name": "crock32",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\""
						},
						{
							"id": 426,
							"name": "dieBase6",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 3,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"⚀⚁⚂⚃⚄⚅\""
						},
						{
							"id": 433,
							"name": "dominoBase28",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 10,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"🁣🁤🁫🁥🁬🁳🁦🁭🁴🁻🁧🁮🁵🁼🂃🁨🁯🁶🁽🂊🂋🁩🁰🁷🁾🂅🂌🂓\""
						},
						{
							"id": 442,
							"name": "flickrBase58",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\""
						},
						{
							"id": 439,
							"name": "mahjongBase43",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"🀑🀒🀓🀔🀕🀖🀗🀘🀙🀚🀛🀜🀝🀞🀟🀠🀡🀇🀈🀉🀊🀋🀌🀍🀎🀏🀀🀁🀂🀃🀄︎🀅🀆🀐🀢🀣🀤🀥🀦🀧🀨🀩🀪\""
						},
						{
							"id": 435,
							"name": "zBase32",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity.ts",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ybndrfg8ejkmcpqxot1uwisza345h769\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								429,
								428,
								430,
								432,
								425,
								434,
								437,
								438,
								441,
								443,
								444,
								427,
								440,
								431,
								445,
								436,
								426,
								433,
								442,
								439,
								435
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 463,
					"name": "defaultSettings",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 465,
							"name": "alphabet",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "alphabets.base58"
						},
						{
							"id": 464,
							"name": "generator",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"counter\""
						},
						{
							"id": 466,
							"name": "prefix",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"defaultValue": "undefined"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								465,
								464,
								466
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-identity/src/gram-identity-plugin.ts",
							"line": 19,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						472,
						471,
						473,
						474
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						458
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						446
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						462
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						476,
						467,
						452
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						424,
						463
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-identity/src/gram-identity.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 479,
			"name": "gram-ops",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-ops/src/gram-ops.ts",
			"comment": {
				"text": "`(ast)-[ops]->(features)`\n\nUtility operations for extracting path features from `gram` AST.\n\n## How to gram-ops\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-ops\n```\n\n### Build a path \n\nUse [[gram-builder]] to create a path. \n\n``` TypeScript\nimport { node, edge } from '@gram-data/gram-builder';\n\nconst left = node('a');\nconst right = node('b');\nconst path = edge([left, right], 'right');\n```\n\n### Extract features from the path\n\nExtract a node list:\n\n``` TypeScript\nimport { nodes } from '@gram-data/gram-ops';\n\nconst ns:GramPath[] = nodes(path); \n```\n\nExtract an edge list:\n\n``` TypeScript\nimport { nodes } from '@gram-data/gram-ops';\n\nconst es:GramPath[] = edges(path); \n```\n\n## Next Steps\n\n- Write back to a string using [[gram-stringify]]\n- Introspect the AST using [[gram-ast]]"
			},
			"children": [
				{
					"id": 503,
					"name": "count",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 480
				},
				{
					"id": 509,
					"name": "edges",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 499
				},
				{
					"id": 504,
					"name": "head",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 483
				},
				{
					"id": 507,
					"name": "identity",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 493
				},
				{
					"id": 506,
					"name": "merge",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 489
				},
				{
					"id": 508,
					"name": "nodes",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 496
				},
				{
					"id": 505,
					"name": "tail",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 486
				},
				{
					"id": 480,
					"name": "count",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 481,
							"name": "count",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 482,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 11,
							"character": 18
						}
					]
				},
				{
					"id": 499,
					"name": "edges",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 500,
							"name": "edges",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 501,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 59,
									"name": "GramEdge"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 70,
							"character": 18
						}
					]
				},
				{
					"id": 483,
					"name": "head",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 484,
							"name": "head",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 485,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 48,
								"name": "GramNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 493,
					"name": "identity",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 494,
							"name": "identity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 495,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 35,
							"character": 21
						}
					]
				},
				{
					"id": 489,
					"name": "merge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 490,
							"name": "merge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 491,
									"name": "_",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								},
								{
									"id": 492,
									"name": "next",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 26,
								"name": "GramPath"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 30,
							"character": 18
						}
					]
				},
				{
					"id": 496,
					"name": "nodes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Node set projected from within a path."
					},
					"signatures": [
						{
							"id": 497,
							"name": "nodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Node set projected from within a path."
							},
							"parameters": [
								{
									"id": 498,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "paths from which to project nodes\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 26,
												"name": "GramPath"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 26,
													"name": "GramPath"
												}
											},
											{
												"type": "reference",
												"id": 19,
												"name": "GramSeq"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 48,
									"name": "GramNode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 44,
							"character": 18
						}
					]
				},
				{
					"id": 486,
					"name": "tail",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 487,
							"name": "tail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 488,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 48,
								"name": "GramNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-ops/src/gram-ops.ts",
							"line": 24,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						503,
						509,
						504,
						507,
						506,
						508,
						505
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						480,
						499,
						483,
						493,
						489,
						496,
						486
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-ops/src/gram-ops.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 510,
			"name": "gram-parse",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-parse/src/gram-errors.ts",
			"comment": {
				"text": "From text literal `(a)-->(b)` to a gram AST. \n\n## How to gram-parse\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-parse\n```\n\n### Parse text into an AST:\n\n``` TypeScript\nimport { toAST } from '@gram-data/gram-parse'; \n\nconst src = '(a)-->(b)';\nconst parsed = toAST(src);\n```\n\n### Inspect AST using [unist-util-inspect](https://github.com/syntax-tree/unist-util-inspect):\n\n``` TypeScript\nconst inspect = require('unist-util-inspect');\n\nconsole.log(inspect(parsed));\n```\n\n## Next Steps\n\n- Transform to js objects using [[gram-value]]\n- Write back to a string using [[gram-stringify]]\n- Introspect the AST using [[gram-ast]]\n"
			},
			"children": [
				{
					"id": 619,
					"name": "GramParserSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 620,
							"name": "strict",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								620
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
							"line": 46,
							"character": 35
						}
					]
				},
				{
					"id": 548,
					"name": "Grammar",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 549,
							"name": "Lexer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 135,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 518,
										"name": "NearleyLexer"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 550,
							"name": "ParserRules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 136,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 538,
									"name": "NearleyRule"
								}
							}
						},
						{
							"id": 551,
							"name": "ParserStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 137,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								549,
								550,
								551
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 134,
							"character": 17
						}
					]
				},
				{
					"id": 518,
					"name": "NearleyLexer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 530,
							"name": "formatError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 531,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 532,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 533,
													"name": "token",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 119,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 534,
							"name": "has",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 120,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 535,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 536,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 537,
													"name": "tokenType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 120,
											"character": 6
										}
									]
								}
							}
						},
						{
							"id": 524,
							"name": "next",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 117,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 525,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 526,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 514,
														"name": "NearleyToken"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 117,
											"character": 7
										}
									]
								}
							}
						},
						{
							"id": 519,
							"name": "reset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 116,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 520,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 521,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 522,
													"name": "chunk",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 523,
													"name": "info",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 116,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 527,
							"name": "save",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 118,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 528,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 529,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 118,
											"character": 7
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								530,
								534,
								524,
								519,
								527
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 115,
							"character": 22
						}
					]
				},
				{
					"id": 538,
					"name": "NearleyRule",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 539,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 124,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 541,
							"name": "postprocess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 126,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 542,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 543,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 544,
															"name": "d",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														},
														{
															"id": 545,
															"name": "loc",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 546,
															"name": "reject",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 547,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {}
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 540,
							"name": "symbols",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 125,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 587,
									"name": "NearleySymbol"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								539,
								541,
								540
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 123,
							"character": 21
						}
					]
				},
				{
					"id": 514,
					"name": "NearleyToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 516,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 517,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 515,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 111,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								515
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 110,
							"character": 22
						}
					]
				},
				{
					"id": 587,
					"name": "NearleySymbol",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 129,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 588,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 589,
											"name": "literal",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 131,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												589
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 131,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 590,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 591,
											"name": "test",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 132,
													"character": 10
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 592,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 593,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 594,
																	"name": "token",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "packages/gram-parse/src/gram-grammar.ts",
															"line": 132,
															"character": 11
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												591
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/gram-parse/src/gram-grammar.ts",
											"line": 132,
											"character": 3
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 511,
					"name": "INCOMPLETE_PARSE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-errors.ts",
							"line": 1,
							"character": 29
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "Incomplete parse."
					},
					"defaultValue": "\"Incomplete parse.\""
				},
				{
					"id": 512,
					"name": "SYNTAX_ERROR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-errors.ts",
							"line": 2,
							"character": 25
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "Syntax error at"
					},
					"defaultValue": "\"Syntax error at\""
				},
				{
					"id": 562,
					"name": "boolean",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 19,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 566,
					"name": "decimal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 23,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 564,
					"name": "doubleQuotedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 21,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 559,
					"name": "hexadecimal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 16,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 555,
					"name": "identifier",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 12,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 557,
					"name": "integer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 14,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 569,
					"name": "lexer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 518,
						"name": "NearleyLexer"
					},
					"defaultValue": "(moo.compile({\n  whitespace: { match: /\\s+/, lineBreaks: true },\n  lineComment: { match: /\\/\\/.*?\\n?$/ },\n  hexadecimal: tokens.hexadecimal,\n  octal: tokens.octal,\n  measurement: tokens.measurement,\n  decimal: tokens.decimal,\n  integer: tokens.integer,\n  taggedString: { match: tokens.taggedString },\n  boolean: ['true', 'TRUE', 'True', 'false', 'FALSE', 'False'],\n  symbol: tokens.symbol,\n  identifier: tokens.identifier,\n  doubleQuotedString: {\n    match: tokens.doubleQuotedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  singleQuotedString: {\n    match: tokens.singleQuotedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  tickedString: {\n    match: tokens.tickedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  '-->': '-->',\n  '--': '--',\n  '<--': '<--',\n  '-[]->': '-[]->',\n  '-[]-': '-[]-',\n  '<-[]-': '<-[]-',\n  '<-[': '<-[',\n  ']->': ']->',\n  '-[': '-[',\n  ']-': ']-',\n  '{': '{',\n  '}': '}',\n  '[': '[',\n  ']': ']',\n  '(': '(',\n  ')': ')',\n  ',': ',',\n  ':': ':',\n  '`': '`',\n  \"'\": \"'\",\n  ø: 'ø',\n}) as unknown) as NearleyLexer"
				},
				{
					"id": 568,
					"name": "lineComment",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 25,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 560,
					"name": "measurement",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 17,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 558,
					"name": "octal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 15,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 563,
					"name": "singleQuotedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 20,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 556,
					"name": "symbol",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 565,
					"name": "taggedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 22,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 561,
					"name": "tickedString",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 18,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 567,
					"name": "whitespace",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 24,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 570,
					"name": "empty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 571,
							"name": "empty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "null"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 74,
							"character": 11
						}
					]
				},
				{
					"id": 634,
					"name": "gramParserPlugin",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 635,
							"name": "gramParserPlugin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
							"line": 50,
							"character": 22
						}
					]
				},
				{
					"id": 552,
					"name": "id",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 553,
							"name": "id",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 554,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 9,
							"character": 11
						}
					]
				},
				{
					"id": 621,
					"name": "lexerLocation",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 622,
							"name": "lexerLocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 623,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "LexerState"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
							"line": 13,
							"character": 19
						}
					]
				},
				{
					"id": 630,
					"name": "parse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 631,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 632,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 633,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "VFile"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
							"line": 27,
							"character": 18
						}
					]
				},
				{
					"id": 581,
					"name": "separateNumberFromUnits",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 582,
							"name": "separateNumberFromUnits",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 583,
									"name": "measurementValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 584,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 586,
											"name": "unit",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 106,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "valueParts![2]"
										},
										{
											"id": 585,
											"name": "value",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 105,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "valueParts![1]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												586,
												585
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 100,
							"character": 32
						}
					]
				},
				{
					"id": 575,
					"name": "separateTagFromString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 576,
							"name": "separateTagFromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 577,
									"name": "taggedStringValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 578,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 579,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 95,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "valueParts![1]"
										},
										{
											"id": 580,
											"name": "value",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-grammar.ts",
													"line": 96,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "valueParts![2]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												579,
												580
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 90,
							"character": 30
						}
					]
				},
				{
					"id": 572,
					"name": "text",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 573,
							"name": "text",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 574,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 76,
							"character": 10
						}
					]
				},
				{
					"id": 637,
					"name": "toAST",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 638,
							"name": "toAST",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 639,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "GramSeq"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/index.ts",
							"line": 7,
							"character": 11
						}
					]
				},
				{
					"id": 624,
					"name": "tokenLocation",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 625,
							"name": "tokenLocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 626,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Token"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 627,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 629,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
													"line": 23,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "token.col"
										},
										{
											"id": 628,
											"name": "line",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "token.line"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												629,
												628
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-parser-plugin.ts",
							"line": 20,
							"character": 19
						}
					]
				},
				{
					"id": 595,
					"name": "grammar",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 596,
							"name": "Lexer",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 141,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 518,
								"name": "NearleyLexer"
							},
							"defaultValue": "lexer"
						},
						{
							"id": 597,
							"name": "ParserRules",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 142,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 598,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 599,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 148,
																"character": 10
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"GramSeq$ebnf$1\""
													},
													{
														"id": 600,
														"name": "symbols",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 148,
																"character": 37
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														"defaultValue": "['GramSeq$ebnf$1$subexpression$1']"
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															599,
															600
														]
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 601,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 602,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 344,
																"character": 10
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"Attributes\""
													},
													{
														"id": 603,
														"name": "symbols",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 345,
																"character": 13
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														"defaultValue": "['Attributes$ebnf$1', 'Attributes$ebnf$2', 'Attributes$ebnf$3']"
													},
													{
														"id": 604,
														"name": "postprocess",
														"kind": 64,
														"kindString": "Function",
														"flags": {},
														"signatures": [
															{
																"id": 605,
																"name": "postprocess",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 606,
																		"name": "d",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	},
																	{
																		"id": 607,
																		"name": "_",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	},
																	{
																		"id": 608,
																		"name": "reject",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 609,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {}
																					}
																				}
																			]
																		}
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "undefined"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 610,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {}
																			}
																		}
																	]
																}
															}
														],
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 346,
																"character": 17
															}
														]
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															602,
															603
														]
													},
													{
														"title": "Functions",
														"kind": 64,
														"children": [
															604
														]
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 611,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 612,
														"name": "name",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 410,
																"character": 10
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"Identity\""
													},
													{
														"id": 613,
														"name": "symbols",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 411,
																"character": 13
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														"defaultValue": "[\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n        '_',\n      ]"
													},
													{
														"id": 614,
														"name": "postprocess",
														"kind": 64,
														"kindString": "Function",
														"flags": {},
														"signatures": [
															{
																"id": 615,
																"name": "postprocess",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 616,
																		"name": "__namedParameters",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"originalName": "__0",
																		"type": {
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "intrinsic",
																					"name": "any"
																				}
																			]
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"sources": [
															{
																"fileName": "packages/gram-parse/src/gram-grammar.ts",
																"line": 415,
																"character": 17
															}
														]
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															612,
															613
														]
													},
													{
														"title": "Functions",
														"kind": 64,
														"children": [
															614
														]
													}
												]
											}
										}
									]
								}
							},
							"defaultValue": "[\n    {\n      name: 'GramSeq$ebnf$1$subexpression$1',\n      symbols: ['Path'],\n      postprocess: ([pp]) => pp,\n    },\n    { name: 'GramSeq$ebnf$1', symbols: ['GramSeq$ebnf$1$subexpression$1'] },\n    {\n      name: 'GramSeq$ebnf$1$subexpression$2',\n      symbols: ['Path'],\n      postprocess: ([pp]) => pp,\n    },\n    {\n      name: 'GramSeq$ebnf$1',\n      symbols: ['GramSeq$ebnf$1', 'GramSeq$ebnf$1$subexpression$2'],\n      postprocess: (d) => d[0].concat([d[1]]),\n    },\n    {\n      name: 'GramSeq',\n      symbols: ['_', 'GramSeq$ebnf$1'],\n      postprocess: ([, pp]) => g.seq(g.flatten(pp)),\n    },\n    { name: 'Path', symbols: ['NodePattern'], postprocess: id },\n    { name: 'Path', symbols: ['PathComposition'], postprocess: id },\n    { name: 'Path', symbols: ['PathPair'], postprocess: id },\n    {\n      name: 'NodePattern',\n      symbols: ['Node', '_', 'Edge', '_', 'NodePattern'],\n      postprocess: ([n, , es, , np]) =>\n        g.cons([n, np], {\n          kind: es.kind,\n          id: es.id,\n          labels: es.labels,\n          record: es.record,\n        }),\n    },\n    { name: 'NodePattern', symbols: ['Node'], postprocess: id },\n    { name: 'Node$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'Node$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'Node',\n      symbols: [{ literal: '(' }, '_', 'Node$ebnf$1', { literal: ')' }, '_'],\n      postprocess: ([, , attrs]) =>\n        attrs ? g.node(attrs.id, attrs.labels, attrs.record) : g.node(),\n    },\n    { name: 'Edge$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[' }, '_', 'Edge$ebnf$1', { literal: ']->' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'right', ...attrs }),\n    },\n    { name: 'Edge$ebnf$2', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$2', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[' }, '_', 'Edge$ebnf$2', { literal: ']-' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'either', ...attrs }),\n    },\n    { name: 'Edge$ebnf$3', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$3', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<-[' }, '_', 'Edge$ebnf$3', { literal: ']-' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'left', ...attrs }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[]->' }, '_'],\n      postprocess: () => ({ kind: 'right' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[]-' }, '_'],\n      postprocess: () => ({ kind: 'either' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<-[]-' }, '_'],\n      postprocess: () => ({ kind: 'left' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-->' }, '_'],\n      postprocess: () => ({ kind: 'right' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '--' }, '_'],\n      postprocess: () => ({ kind: 'either' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<--' }, '_'],\n      postprocess: () => ({ kind: 'left' }),\n    },\n    { name: 'PathComposition', symbols: ['PathPoint'], postprocess: id },\n    { name: 'PathComposition', symbols: ['PathAnnotation'], postprocess: id },\n    { name: 'PathComposition', symbols: ['PathExpression'], postprocess: id },\n    { name: 'PathPoint$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathPoint$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'PathPoint',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathPoint$ebnf$1',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attr]) => {\n        if (\n          attr &&\n          (attr.id || attr.labels || attr.record) &&\n          attr.id !== 'ø'\n        ) {\n          // console.log(attr);\n          return g.node(attr.id, attr.labels, attr.record);\n        } else {\n          return g.empty();\n        }\n      },\n    },\n    { name: 'PathAnnotation$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathAnnotation$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'PathAnnotation',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathAnnotation$ebnf$1',\n        'Path',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attr, lhs]) => {\n        // console.log('annotate()', lhs)\n        return g.cons(\n          [lhs],\n          attr ? { id: attr.id, labels: attr.labels, record: attr.record } : {}\n        );\n      },\n    },\n    { name: 'PathExpression$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathExpression$ebnf$1', symbols: [], postprocess: () => null },\n    { name: 'PathExpression$ebnf$2', symbols: ['Kind'], postprocess: id },\n    { name: 'PathExpression$ebnf$2', symbols: [], postprocess: () => null },\n    {\n      name: 'PathExpression',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathExpression$ebnf$1',\n        'PathExpression$ebnf$2',\n        'Path',\n        'Path',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attrs, kind, lhs, rhs]) => {\n        return g.cons([lhs, rhs], {\n          kind,\n          id: attrs.id,\n          labels: attrs.labels,\n          record: attrs.record,\n        });\n      },\n    },\n    { name: 'PathPair$subexpression$1', symbols: ['NodePattern'] },\n    { name: 'PathPair$subexpression$1', symbols: ['PathComposition'] },\n    {\n      name: 'PathPair',\n      symbols: ['PathPair$subexpression$1', { literal: ',' }, '_', 'Path'],\n      postprocess: ([lp, , , rp]) => g.pair([lp[0], rp]),\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: ',' }, '_'],\n      postprocess: () => 'pair',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '-->' }, '_'],\n      postprocess: () => 'right',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '--' }, '_'],\n      postprocess: () => 'either',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '<--' }, '_'],\n      postprocess: () => 'left',\n    },\n    { name: 'Attributes$ebnf$1', symbols: ['Identity'], postprocess: id },\n    { name: 'Attributes$ebnf$1', symbols: [], postprocess: () => null },\n    { name: 'Attributes$ebnf$2', symbols: ['LabelList'], postprocess: id },\n    { name: 'Attributes$ebnf$2', symbols: [], postprocess: () => null },\n    { name: 'Attributes$ebnf$3', symbols: ['Record'], postprocess: id },\n    { name: 'Attributes$ebnf$3', symbols: [], postprocess: () => null },\n    {\n      name: 'Attributes',\n      symbols: ['Attributes$ebnf$1', 'Attributes$ebnf$2', 'Attributes$ebnf$3'],\n      postprocess: function (d, _, reject) {\n        const [id, labels, record] = d;\n        if (id || labels || record) {\n          return { id, labels, record };\n        } else return reject;\n      },\n    },\n    { name: 'LabelList$ebnf$1', symbols: ['Label'] },\n    {\n      name: 'LabelList$ebnf$1',\n      symbols: ['LabelList$ebnf$1', 'Label'],\n      postprocess: (d) => d[0].concat([d[1]]),\n    },\n    {\n      name: 'LabelList',\n      symbols: ['LabelList$ebnf$1'],\n      postprocess: ([labels]) => labels,\n    },\n    {\n      name: 'Label',\n      symbols: [{ literal: ':' }, 'Symbol'],\n      postprocess: ([, label]) => label,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('identifier') ? { type: 'identifier' } : identifier,\n        '_',\n      ],\n      postprocess: text,\n    },\n    { name: 'Identity', symbols: [{ literal: 'ø' }, '_'], postprocess: text },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('symbol') ? { type: 'symbol' } : symbol, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('integer') ? { type: 'integer' } : integer, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('octal') ? { type: 'octal' } : octal, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('hexadecimal') ? { type: 'hexadecimal' } : hexadecimal,\n        '_',\n      ],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('measurement') ? { type: 'measurement' } : measurement,\n        '_',\n      ],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n        '_',\n      ],\n      postprocess: ([t]) => t.text.slice(1, -1),\n    },\n    {\n      name: 'Symbol',\n      symbols: [lexer.has('symbol') ? { type: 'symbol' } : symbol, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Symbol',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n        '_',\n      ],\n      postprocess: ([t]) => t.text.slice(1, -1),\n    },\n    {\n      name: 'Record',\n      symbols: [{ literal: '{' }, '_', { literal: '}' }, '_'],\n      postprocess: empty,\n    },\n    { name: 'Record$ebnf$1', symbols: [] },\n    {\n      name: 'Record$ebnf$1$subexpression$1',\n      symbols: [{ literal: ',' }, '_', 'Property'],\n      postprocess: ([, , p]) => p,\n    },\n    {\n      name: 'Record$ebnf$1',\n      symbols: ['Record$ebnf$1', 'Record$ebnf$1$subexpression$1'],\n      postprocess: (d) => d[0].concat([d[1]]),\n    },\n    {\n      name: 'Record',\n      symbols: [\n        { literal: '{' },\n        '_',\n        'Property',\n        'Record$ebnf$1',\n        { literal: '}' },\n        '_',\n      ],\n      postprocess: ([, , p, ps]) => g.propertiesToRecord([p, ...ps]),\n    },\n    {\n      name: 'Property',\n      symbols: ['Symbol', { literal: ':' }, '_', 'Value'],\n      postprocess: ([k, , , v]) => g.property(k, v),\n    },\n    { name: 'Value', symbols: ['StringLiteral', '_'], postprocess: id },\n    { name: 'Value', symbols: ['NumericLiteral', '_'], postprocess: id },\n    {\n      name: 'Value',\n      symbols: [lexer.has('boolean') ? { type: 'boolean' } : boolean, '_'],\n      postprocess: (d) => g.boolean(JSON.parse(d[0].value.toLowerCase())),\n    },\n    { name: 'Value$ebnf$1', symbols: [] },\n    {\n      name: 'Value$ebnf$1$subexpression$1',\n      symbols: [{ literal: ',' }, '_', 'Value'],\n      postprocess: ([, , v]) => v,\n    },\n    {\n      name: 'Value$ebnf$1',\n      symbols: ['Value$ebnf$1', 'Value$ebnf$1$subexpression$1'],\n      postprocess: (d) => d[0].concat([d[1]]),\n    },\n    {\n      name: 'Value',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'Value',\n        'Value$ebnf$1',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , v, vs]) => [v, ...vs],\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('singleQuotedString')\n          ? { type: 'singleQuotedString' }\n          : singleQuotedString,\n      ],\n      postprocess: (d) => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('doubleQuotedString')\n          ? { type: 'doubleQuotedString' }\n          : doubleQuotedString,\n      ],\n      postprocess: (d) => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n      ],\n      postprocess: (d) => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('taggedString') ? { type: 'taggedString' } : taggedString,\n      ],\n      postprocess: (d) => {\n        const parts = separateTagFromString(d[0].value);\n        return g.tagged(parts.tag, parts.value);\n      },\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('integer') ? { type: 'integer' } : integer],\n      postprocess: (d) => g.integer(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('decimal') ? { type: 'decimal' } : decimal],\n      postprocess: (d) => g.decimal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [\n        lexer.has('hexadecimal') ? { type: 'hexadecimal' } : hexadecimal,\n      ],\n      postprocess: (d) => g.hexadecimal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('octal') ? { type: 'octal' } : octal],\n      postprocess: (d) => g.octal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [\n        lexer.has('measurement') ? { type: 'measurement' } : measurement,\n      ],\n      postprocess: (d) => {\n        const parts = separateNumberFromUnits(d[0].value);\n        return g.measurement(parts.unit, parts.value);\n      },\n    },\n    {\n      name: '_$ebnf$1',\n      symbols: [lexer.has('whitespace') ? { type: 'whitespace' } : whitespace],\n      postprocess: id,\n    },\n    { name: '_$ebnf$1', symbols: [], postprocess: () => null },\n    { name: '_', symbols: ['_$ebnf$1'], postprocess: empty },\n    {\n      name: 'Comment',\n      symbols: [\n        lexer.has('lineComment') ? { type: 'lineComment' } : lineComment,\n      ],\n      postprocess: empty,\n    },\n    { name: 'EOL', symbols: [{ literal: '\\n' }], postprocess: empty },\n  ]"
						},
						{
							"id": 617,
							"name": "ParserStart",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "packages/gram-parse/src/gram-grammar.ts",
									"line": 576,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"GramSeq\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								596,
								597,
								617
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-parse/src/gram-grammar.ts",
							"line": 140,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						619,
						548,
						518,
						538,
						514
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						587
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						511,
						512,
						562,
						566,
						564,
						559,
						555,
						557,
						569,
						568,
						560,
						558,
						563,
						556,
						565,
						561,
						567
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						570,
						634,
						552,
						621,
						630,
						581,
						575,
						572,
						637,
						624
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						595
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-parse/src/gram-errors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 640,
			"name": "gram-stringify",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-stringify/src/gram-stringify.ts",
			"comment": {
				"text": "From gram AST to text literal `(a)-->(b)`.\n\n## How to gram-stringify\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-stringify\n```\n\n### Build an AST using [[gram-builder]], then pretty print with gram-stringify:\n\n``` TypeScript\nimport { node, edge } from '@gram-data/gram-builder';\nimport { stringify } from '@gram-data/gram-stringify'; \n\nconst left = node('a');\nconst right = node('b');\nconst ast = edge([left, right], 'right');\n\nconsole.log(stringify(ast));\n```\n\n### Parse to AST using [[gram-parse]], then pretty print with gram-stringify:\n\n``` TypeScript\nimport { toAST } from '@gram-data/gram-parse'; \nimport { stringify } from '@gram-data/gram-stringify'; \n\nconst src = '(a)-->(b)';\nconst ast = toAST(src);\n\nconsole.log(stringify(ast));\n```\n\n## Next Steps\n\n- Save to a file to share a gram with a friend!"
			},
			"children": [
				{
					"id": 659,
					"name": "arrayToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 660,
							"name": "arrayToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 661,
									"name": "xs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 63,
							"character": 19
						}
					]
				},
				{
					"id": 644,
					"name": "assertNever",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 645,
							"name": "assertNever",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 646,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 20,
							"character": 20
						}
					]
				},
				{
					"id": 674,
					"name": "edgeToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 675,
							"name": "edgeToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 676,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 59,
										"name": "GramEdge"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 90,
							"character": 18
						}
					]
				},
				{
					"id": 668,
					"name": "elementContentToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 669,
							"name": "elementContentToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 670,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 73,
							"character": 28
						}
					]
				},
				{
					"id": 696,
					"name": "gramStringifyPlugin",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 697,
							"name": "gramStringifyPlugin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify-plugin.ts",
							"line": 20,
							"character": 25
						}
					]
				},
				{
					"id": 683,
					"name": "hasAttributes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 684,
							"name": "hasAttributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 685,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 144,
							"character": 19
						}
					]
				},
				{
					"id": 641,
					"name": "isEmpty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 642,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 643,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 18,
							"character": 13
						}
					]
				},
				{
					"id": 671,
					"name": "nodeToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 672,
							"name": "nodeToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 673,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 48,
										"name": "GramNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 87,
							"character": 18
						}
					]
				},
				{
					"id": 662,
					"name": "objectToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 663,
							"name": "objectToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 664,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 665,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 666,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 667,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/gram-stringify/src/gram-stringify.ts",
													"line": 65,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 65,
							"character": 20
						}
					]
				},
				{
					"id": 680,
					"name": "pairToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 681,
							"name": "pairToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 682,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 132,
							"character": 18
						}
					]
				},
				{
					"id": 677,
					"name": "pathCompositionToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 678,
							"name": "pathCompositionToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 679,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 106,
							"character": 29
						}
					]
				},
				{
					"id": 686,
					"name": "pathToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 687,
							"name": "pathToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 688,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 26,
										"name": "GramPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 146,
							"character": 18
						}
					]
				},
				{
					"id": 653,
					"name": "propertyToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 654,
							"name": "propertyToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 655,
									"name": "property",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 70,
										"name": "GramProperty"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 52,
							"character": 22
						}
					]
				},
				{
					"id": 656,
					"name": "recordToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 657,
							"name": "recordToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 658,
									"name": "record",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 220,
										"name": "GramRecord"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 55,
							"character": 20
						}
					]
				},
				{
					"id": 689,
					"name": "stringify",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 690,
							"name": "stringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 691,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 163,
							"character": 22
						}
					]
				},
				{
					"id": 693,
					"name": "stringifyCompiler",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 694,
							"name": "stringifyCompiler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 695,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "UnistNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify-plugin.ts",
							"line": 9,
							"character": 23
						}
					]
				},
				{
					"id": 647,
					"name": "toStringLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 648,
							"name": "toStringLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 649,
									"name": "l",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 230,
										"name": "GramLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 23,
							"character": 21
						}
					]
				},
				{
					"id": 650,
					"name": "toStringValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 651,
							"name": "toStringValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 652,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 219,
										"name": "GramRecordValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-stringify/src/gram-stringify.ts",
							"line": 42,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						659,
						644,
						674,
						668,
						696,
						683,
						641,
						671,
						662,
						680,
						677,
						686,
						653,
						656,
						689,
						693,
						647,
						650
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-stringify/src/gram-stringify.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 699,
			"name": "gram-value",
			"kind": 1,
			"kindString": "Package",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/akollegger/Developer/gram-data/gram-js/packages/gram-value/src/gram-value.ts",
			"comment": {
				"text": "Evaluate data graph AST values, producing Javascript primitive or object values.\n\n## How to gram-value\n\n### Install:\n\n``` bash\nnpm install @gram-data/gram-value\n```\n\n### Build an AST using [[gram-builder]]:\n\n``` TypeScript\nimport { node, edge } from '@gram-data/gram-builder';\n\nconst left = node('a');\nconst right = node('b');\nconst ast = edge([left, right], 'right');\n```\n\n## Next Steps\n\n- Write back to a string using [[gram-stringify]]\n- Introspect the AST using [[gram-ast]]\n- Write your own [unified](https://github.com/unifiedjs/unified#plugin) plugin for processing the AST\n"
			},
			"children": [
				{
					"id": 792,
					"name": "LiteralValueEvaluator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 719
				},
				{
					"id": 790,
					"name": "iso8601Duration",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 717
				},
				{
					"id": 788,
					"name": "iso8601LocalTime",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 715
				},
				{
					"id": 785,
					"name": "iso8601OrdinalDate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 712
				},
				{
					"id": 791,
					"name": "iso8601Repeat",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 718
				},
				{
					"id": 789,
					"name": "iso8601Time",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 716
				},
				{
					"id": 787,
					"name": "iso8601WeekDate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 714
				},
				{
					"id": 786,
					"name": "iso8601WeekOfYear",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 713
				},
				{
					"id": 782,
					"name": "iso8601Year",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 709
				},
				{
					"id": 783,
					"name": "iso8601YearMonth",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 710
				},
				{
					"id": 784,
					"name": "iso8601YearMonthDay",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 711
				},
				{
					"id": 793,
					"name": "valueOf",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 723
				},
				{
					"id": 795,
					"name": "valueOfBoolean",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 733
				},
				{
					"id": 798,
					"name": "valueOfDate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 742
				},
				{
					"id": 803,
					"name": "valueOfDecimal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 763
				},
				{
					"id": 800,
					"name": "valueOfDuration",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 754
				},
				{
					"id": 804,
					"name": "valueOfHexadecimal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 766
				},
				{
					"id": 801,
					"name": "valueOfInteger",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 757
				},
				{
					"id": 794,
					"name": "valueOfLiteral",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 730
				},
				{
					"id": 802,
					"name": "valueOfMeasurement",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 760
				},
				{
					"id": 805,
					"name": "valueOfOctal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 769
				},
				{
					"id": 796,
					"name": "valueOfString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 736
				},
				{
					"id": 797,
					"name": "valueOfTaggedLiteral",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 739
				},
				{
					"id": 799,
					"name": "valueOfTime",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 751
				},
				{
					"id": 700,
					"name": "InvalidAstError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 702,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 703,
									"name": "new InvalidAstError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 704,
											"name": "ast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "UnistParent"
													},
													{
														"type": "reference",
														"name": "UnistLiteral"
													},
													{
														"type": "reference",
														"name": "UnistNode"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 700,
										"name": "InvalidAstError"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/gram-value/src/gram-value.ts",
									"line": 40,
									"character": 46
								}
							]
						},
						{
							"id": 701,
							"name": "ast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-value/src/gram-value.ts",
									"line": 40,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "UnistParent"
									},
									{
										"type": "reference",
										"name": "UnistLiteral"
									},
									{
										"type": "reference",
										"name": "UnistNode"
									}
								]
							}
						},
						{
							"id": 706,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 974,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 706,
								"name": "Error.message"
							}
						},
						{
							"id": 705,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 705,
								"name": "Error.name"
							}
						},
						{
							"id": 707,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 975,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 707,
								"name": "Error.stack"
							}
						},
						{
							"id": 708,
							"name": "Error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 984,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "ErrorConstructor"
							},
							"extendedBy": [
								{
									"type": "reference",
									"id": 700,
									"name": "InvalidAstError"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								702
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								701,
								706,
								705,
								707,
								708
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 39,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 708,
							"name": "Error"
						}
					]
				},
				{
					"id": 773,
					"name": "ValuePluginSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 774,
							"name": "literalValueEvaluator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/gram-value/src/gram-value-plugin.ts",
									"line": 10,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 792,
								"name": "LiteralValueEvaluator"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								774
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value-plugin.ts",
							"line": 9,
							"character": 29
						}
					]
				},
				{
					"id": 719,
					"name": "LiteralValueEvaluator",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of function used to evaluate text literal values."
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 52,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 720,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 721,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 722,
											"name": "ast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 230,
												"name": "GramLiteral"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "packages/gram-value/src/gram-value.ts",
									"line": 52,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 747,
					"name": "MILLIS_IN_AN_HOUR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 173,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MILLIS_IN_A_MINUTE * 60"
				},
				{
					"id": 748,
					"name": "MILLIS_IN_A_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 174,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MILLIS_IN_AN_HOUR * 24"
				},
				{
					"id": 746,
					"name": "MILLIS_IN_A_MINUTE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 172,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MILLIS_IN_A_SECOND * 60"
				},
				{
					"id": 749,
					"name": "MILLIS_IN_A_MONTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 175,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MILLIS_IN_A_DAY * 30"
				},
				{
					"id": 745,
					"name": "MILLIS_IN_A_SECOND",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 171,
							"character": 24
						}
					],
					"type": {
						"type": "unknown",
						"name": "1000"
					},
					"defaultValue": "1000"
				},
				{
					"id": 750,
					"name": "MILLIS_IN_A_YEAR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 176,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "MILLIS_IN_A_DAY * 365"
				},
				{
					"id": 717,
					"name": "iso8601Duration",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 36,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^P((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T((\\d+)H)?((\\d+)M)?((\\d+)S)?)?$/"
				},
				{
					"id": 715,
					"name": "iso8601LocalTime",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 33,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^(2[0-3]|[01][0-9]):?([0-5][0-9])(:?([0-5][0-9](\\.[0-9]{3})?))?$/"
				},
				{
					"id": 712,
					"name": "iso8601OrdinalDate",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 30,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([0-9]{4})-?(36[0-6]|3[0-5][0-9]|[12][0-9]{2}|0[1-9][0-9]|00[1-9])$/"
				},
				{
					"id": 718,
					"name": "iso8601Repeat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 37,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^R(\\d*)$/"
				},
				{
					"id": 716,
					"name": "iso8601Time",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 35,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^(2[0-3]|[01][0-9]):?([0-5][0-9]):?([0-5][0-9](\\.[0-9]{3})?)?(Z|([+-])((?:2[0-3]|[01][0-9]))(?::?([0-5][0-9]))?)?$/"
				},
				{
					"id": 714,
					"name": "iso8601WeekDate",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 32,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([0-9]{4})-?W(5[0-3]|[1-4][0-9]|0[1-9])-?([1-7])$/"
				},
				{
					"id": 713,
					"name": "iso8601WeekOfYear",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 31,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([0-9]{4})-?W(5[0-3]|[1-4][0-9]|0[1-9])$/"
				},
				{
					"id": 709,
					"name": "iso8601Year",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 27,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([+-]\\d{4,}\\b|\\d{4})$/"
				},
				{
					"id": 710,
					"name": "iso8601YearMonth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 28,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([0-9]{4})-(1[0-2]|0[1-9])$/"
				},
				{
					"id": 711,
					"name": "iso8601YearMonthDay",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 29,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^([0-9]{4})(-?)(1[0-2]|0[1-9])\\2(3[01]|0[1-9]|[12][0-9])$/"
				},
				{
					"id": 775,
					"name": "visit",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value-plugin.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "require('unist-util-visit')"
				},
				{
					"id": 727,
					"name": "assertNever",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 728,
							"name": "assertNever",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 729,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 83,
							"character": 20
						}
					]
				},
				{
					"id": 778,
					"name": "gramValuePlugin",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 779,
							"name": "gramValuePlugin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 780,
									"name": "settings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 773,
										"name": "ValuePluginSettings"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Transformer"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value-plugin.ts",
							"line": 17,
							"character": 21
						}
					]
				},
				{
					"id": 723,
					"name": "valueOf",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Evaluates data structures and text literal values, returning\nnative objects and primitive values.",
						"tags": [
							{
								"tag": "see",
								"text": "{@linkcode valueOfLiteral} for default literal value evaluator\n"
							}
						]
					},
					"signatures": [
						{
							"id": 724,
							"name": "valueOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Evaluates data structures and text literal values, returning\nnative objects and primitive values.",
								"tags": [
									{
										"tag": "see",
										"text": "{@linkcode valueOfLiteral} for default literal value evaluator\n"
									}
								]
							},
							"parameters": [
								{
									"id": 725,
									"name": "recordValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 219,
												"name": "GramRecordValue"
											},
											{
												"type": "reference",
												"id": 220,
												"name": "GramRecord"
											}
										]
									}
								},
								{
									"id": 726,
									"name": "literalValueEvaluator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "valueOfLiteral"
									},
									"defaultValue": "valueOfLiteral"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 60,
							"character": 20
						}
					]
				},
				{
					"id": 733,
					"name": "valueOfBoolean",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 734,
							"name": "valueOfBoolean",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 735,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 85,
										"name": "BooleanLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 127,
							"character": 27
						}
					]
				},
				{
					"id": 742,
					"name": "valueOfDate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 743,
							"name": "valueOfDate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 744,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 143,
										"name": "DateLiteral"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 144,
							"character": 24
						}
					]
				},
				{
					"id": 763,
					"name": "valueOfDecimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 764,
							"name": "valueOfDecimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 765,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 106,
										"name": "DecimalLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 263,
							"character": 27
						}
					]
				},
				{
					"id": 754,
					"name": "valueOfDuration",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Evaluates the duration as a total of milliseconds, unreliably estimating milliseconds\nper year or month. Reliable duration values can only be calculated with precision\nof days, hours, minutes or seconds."
					},
					"signatures": [
						{
							"id": 755,
							"name": "valueOfDuration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Evaluates the duration as a total of milliseconds, unreliably estimating milliseconds\nper year or month. Reliable duration values can only be calculated with precision\nof days, hours, minutes or seconds."
							},
							"parameters": [
								{
									"id": 756,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 167,
										"name": "DurationLiteral"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 223,
							"character": 28
						}
					]
				},
				{
					"id": 766,
					"name": "valueOfHexadecimal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 767,
							"name": "valueOfHexadecimal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 768,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 113,
										"name": "HexadecimalLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 269,
							"character": 31
						}
					]
				},
				{
					"id": 757,
					"name": "valueOfInteger",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 758,
							"name": "valueOfInteger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 759,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 99,
										"name": "IntegerLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 251,
							"character": 27
						}
					]
				},
				{
					"id": 730,
					"name": "valueOfLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 731,
							"name": "valueOfLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 732,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 230,
										"name": "GramLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 87,
							"character": 27
						}
					]
				},
				{
					"id": 760,
					"name": "valueOfMeasurement",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 761,
							"name": "valueOfMeasurement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 762,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "MeasurementLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 257,
							"character": 31
						}
					]
				},
				{
					"id": 769,
					"name": "valueOfOctal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 770,
							"name": "valueOfOctal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 771,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 120,
										"name": "OctalLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 275,
							"character": 25
						}
					]
				},
				{
					"id": 736,
					"name": "valueOfString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 737,
							"name": "valueOfString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 738,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 92,
										"name": "StringLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 130,
							"character": 26
						}
					]
				},
				{
					"id": 739,
					"name": "valueOfTaggedLiteral",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 740,
							"name": "valueOfTaggedLiteral",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 741,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 135,
										"name": "TaggedTextLiteral"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 137,
							"character": 33
						}
					]
				},
				{
					"id": 751,
					"name": "valueOfTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Value of time as number of milliseconds since midnight."
					},
					"signatures": [
						{
							"id": 752,
							"name": "valueOfTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Value of time as number of milliseconds since midnight."
							},
							"parameters": [
								{
									"id": 753,
									"name": "ast",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 151,
										"name": "TimeLiteral"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value.ts",
							"line": 183,
							"character": 24
						}
					]
				},
				{
					"id": 776,
					"name": "defaultSettings",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 777,
							"name": "literalValueEvaluator",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/gram-value/src/gram-value-plugin.ts",
									"line": 14,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "valueOfLiteral"
							},
							"defaultValue": "valueOfLiteral"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								777
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/gram-value/src/gram-value-plugin.ts",
							"line": 13,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						792,
						790,
						788,
						785,
						791,
						789,
						787,
						786,
						782,
						783,
						784,
						793,
						795,
						798,
						803,
						800,
						804,
						801,
						794,
						802,
						805,
						796,
						797,
						799
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						700
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						773
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						719
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						747,
						748,
						746,
						749,
						745,
						750,
						717,
						715,
						712,
						718,
						716,
						714,
						713,
						709,
						710,
						711,
						775
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						727,
						778,
						723,
						733,
						742,
						763,
						754,
						766,
						757,
						730,
						760,
						769,
						736,
						739,
						751
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						776
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/gram-value/src/gram-value.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				280,
				423,
				479,
				510,
				640,
				699
			]
		}
	]
}